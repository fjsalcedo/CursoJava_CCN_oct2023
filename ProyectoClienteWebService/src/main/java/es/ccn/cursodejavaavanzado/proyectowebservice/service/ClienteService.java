package es.ccn.cursodejavaavanzado.proyectowebservice.service;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 4.0.3
 * 2023-10-26T09:01:55.545+02:00
 * Generated source version: 4.0.3
 *
 */
@WebService(targetNamespace = "localhost", name = "ClienteService")
@XmlSeeAlso({ObjectFactory.class})
public interface ClienteService {

    @WebMethod
    @RequestWrapper(localName = "actualizarCliente", targetNamespace = "localhost", className = "es.ccn.cursodejavaavanzado.proyectowebservice.service.ActualizarCliente")
    @ResponseWrapper(localName = "actualizarClienteResponse", targetNamespace = "localhost", className = "es.ccn.cursodejavaavanzado.proyectowebservice.service.ActualizarClienteResponse")
    public void actualizarCliente(

        @WebParam(name = "arg0", targetNamespace = "")
        es.ccn.cursodejavaavanzado.proyectowebservice.service.Cliente arg0
    );

    @WebMethod
    @RequestWrapper(localName = "insertarCliente", targetNamespace = "localhost", className = "es.ccn.cursodejavaavanzado.proyectowebservice.service.InsertarCliente")
    @ResponseWrapper(localName = "insertarClienteResponse", targetNamespace = "localhost", className = "es.ccn.cursodejavaavanzado.proyectowebservice.service.InsertarClienteResponse")
    public void insertarCliente(

        @WebParam(name = "arg0", targetNamespace = "")
        es.ccn.cursodejavaavanzado.proyectowebservice.service.Cliente arg0
    );

    @WebMethod
    @RequestWrapper(localName = "obtenerClienteById", targetNamespace = "localhost", className = "es.ccn.cursodejavaavanzado.proyectowebservice.service.ObtenerClienteById")
    @ResponseWrapper(localName = "obtenerClienteByIdResponse", targetNamespace = "localhost", className = "es.ccn.cursodejavaavanzado.proyectowebservice.service.ObtenerClienteByIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public es.ccn.cursodejavaavanzado.proyectowebservice.service.Cliente obtenerClienteById(

        @WebParam(name = "arg0", targetNamespace = "")
        int arg0
    );

    @WebMethod
    @RequestWrapper(localName = "obtenerClientes", targetNamespace = "localhost", className = "es.ccn.cursodejavaavanzado.proyectowebservice.service.ObtenerClientes")
    @ResponseWrapper(localName = "obtenerClientesResponse", targetNamespace = "localhost", className = "es.ccn.cursodejavaavanzado.proyectowebservice.service.ObtenerClientesResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<es.ccn.cursodejavaavanzado.proyectowebservice.service.Cliente> obtenerClientes()
;

    @WebMethod
    @RequestWrapper(localName = "borrarCliente", targetNamespace = "localhost", className = "es.ccn.cursodejavaavanzado.proyectowebservice.service.BorrarCliente")
    @ResponseWrapper(localName = "borrarClienteResponse", targetNamespace = "localhost", className = "es.ccn.cursodejavaavanzado.proyectowebservice.service.BorrarClienteResponse")
    public void borrarCliente(

        @WebParam(name = "arg0", targetNamespace = "")
        int arg0
    );
}
